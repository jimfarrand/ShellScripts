#!/bin/bash

## Make quick aliases for available screens
# Script for those who have lots of screens - this allows you to easily choose one when you log in
# An alias is defined for each screen, and a list shown to the user.
# The alias power detaches the chosen screen

## Setup
# In your .zshrc or .bashrc
#   if [ -e "$JIMSSCRIPTS/screenchoose" ] ; then
#     source "$JIMSSCRIPTS/screenchoose"
#   fi
#
# Note that running the script is not enough!  The aliases will be defined in
# the subshell and then lost


TMP="/tmp/.screenchoose.$RANDOM"

## Which sessions should be listed first?
function ispri {
	if [ "$1" = "Default" ] ; then
  		PRI=Yes
	else
		PRI=No
	fi

}

function scrf {
	NAME="$1"
	if [ -z "$2" ] ; then
		ID="$NAME"
	else
		ID="$2"
	fi
	
	export SCREENNAME="$NAME"

        # Save DISPLAY and GPG agent so it can be restored inside screen
        local OLDUMASK=$(umask)
        umask 077
        echo -n "$SESSION_MANAGER" >"/tmp/.realsessionmanager.$USER.$SCREENNAME"
        echo -n "$DISPLAY" >"/tmp/.realdisplay.$USER.$SCREENNAME"
        echo -n "$GPG_AGENT_INFO" >"/tmp/.realgpgagent.$USER.$SCREENNAME"
        echo -n "$SSH_AGENT_PID" >"/tmp/.realsshagentpid.$USER.$SCREENNAME"
        echo -n "$SSH_AUTH_SOCK" >"/tmp/.realsshauthsock.$USER.$SCREENNAME"
        umask $OLDUMASK
	screen -D -R "$ID"
}

SCREENS=0

## Add and print an alias
# This is called by the script generated below.
function screenchoosefunc {
	ID="$2"
	NAME="$1"
	STATE="$3"

	ispri $NAME
	if [ -z "$WANTED" -o "$WANTED" = "$PRI" ] ; then

		if [ "$SCREENS" = "0" ] ; then
			echo
			echo "Attach screen sessions with the following commands:"
		fi

		ALIAS="scr$SCREENS"

		# Print attached sessions in brakets.
        	if [ "$STATE" = "Detached" ] ; then
			echo "	 $ALIAS: $NAME"
		else
			echo "	($ALIAS: $NAME)"
		fi

		alias $ALIAS="scrf $NAME $ID"
	

		SCREENS=$((SCREENS+1))
	fi
}

## findscreens <state> finds screens in the given state and generate a command
# which calls screenfunc with the approprate args
# State is either Attached or Detached
function findscreens {
	if [ -e `which screen` ] ; then
		screen -ls | grep 'Attached\|Detached' |  sed -e 's/[ \t]*\([0-9]*\)\.\([^ \t]*\).*(\(Attached\|Detached\)).*/screenchoosefunc \2 \1 \3/' | sort
	fi
}

# Only if we are not running screen!
if [ "$TERM" != "screen" ] ; then

	# Make a file which calls screenchoosefun with available screens
	# We do this in too seperate passes to that Detached screens are all at the top.
	findscreens >$TMP
	#cat $TMP
	WANTED=Yes source $TMP
	WANTED=No source $TMP

	alias scr='scrf'
	alias myscr='scr Default'

  	if [ "$SCREENS" != "0" ] ; then
		echo "Or scr <name> to create/attach a session by name"
		echo 
	fi

	# Remove temp file
	rm $TMP

else
	# Already in a screen
	alias scr='echo "You are already running in a screen, use scr-really to force"'
	alias myscr='echo "You are already running in a screen, use myscr-really to force"'
	alias scr-really='scrf'
	alias myscr-really='scr-really Default'
fi

